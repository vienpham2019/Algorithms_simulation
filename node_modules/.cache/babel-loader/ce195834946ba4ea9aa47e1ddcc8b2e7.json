{"ast":null,"code":"'use strict';\n\nvar _toConsumableArray = require(\"/Users/vienpham/Desktop/Algorithms_simulation/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _regeneratorRuntime = require(\"/Users/vienpham/Desktop/Algorithms_simulation/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/vienpham/Desktop/Algorithms_simulation/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nvar swal = _interopDefault(require('sweetalert'));\n\nvar index = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var newOptions,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return getOptions.apply(void 0, _args);\n\n          case 2:\n            newOptions = _context.sent;\n            return _context.abrupt(\"return\", swal(newOptions));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function index() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar bindActions = function bindActions(swalInstance) {\n  for (var method in swal) {\n    swalInstance[method] = swal[method];\n  }\n};\n\nvar getOptions = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(params, _ref2) {\n    var identifier, transformer, newOptions, lastParam;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            identifier = _ref2.identifier, transformer = _ref2.transformer;\n            _context2.next = 3;\n            return transformParams(params, identifier, transformer);\n\n          case 3:\n            newOptions = _context2.sent;\n            newOptions = Object.assign({}, parseTextParams(params), newOptions);\n            lastParam = params[params.length - 1];\n            /*\n             * So that we don't lose other specified options\n             * such as buttons... etc.\n             */\n\n            if (isOptionsParam(lastParam, identifier)) {\n              newOptions = Object.assign({}, lastParam, newOptions);\n            }\n\n            return _context2.abrupt(\"return\", newOptions);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function getOptions(_x, _x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar parseTextParams = function parseTextParams(params) {\n  var options = {};\n\n  var isString = function isString(param) {\n    return typeof param === \"string\";\n  };\n\n  if (isString(params[0]) && !isString(params[1])) {\n    options.text = params[0];\n  }\n\n  if (isString(params[1])) {\n    options.title = params[0];\n    options.text = params[1];\n  }\n\n  if (isString(params[2])) {\n    options.icon = params[2];\n  }\n\n  return options;\n}; // Return true if param is a SwalOptions object\n\n\nvar isOptionsParam = function isOptionsParam(param, isTransformable) {\n  return param.constructor === Object && !isTransformable(param);\n};\n/*\n * @params: (SwalParams, Function, Function, boolean)\n * @returns: SwalOptions\n */\n\n\nvar transformParams = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(params, isTransformable, transformer) {\n    var isAsync, transformSingleParam, transformContentOption, newOpts;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            // Check if the transform returns a DOM synchronously\n            // or if it is a promise:\n            isAsync = transformer() instanceof Promise;\n            /*\n             * Example:\n             *   swal(<div>Hello!</div>);\n             */\n\n            transformSingleParam = /*#__PURE__*/function () {\n              var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n                var el, newContent;\n                return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        el = params[0];\n\n                        if (isTransformable(el)) {\n                          _context3.next = 3;\n                          break;\n                        }\n\n                        return _context3.abrupt(\"return\");\n\n                      case 3:\n                        _context3.next = 5;\n                        return transformEl(el, transformer, isAsync);\n\n                      case 5:\n                        newContent = _context3.sent;\n                        return _context3.abrupt(\"return\", {\n                          content: newContent\n                        });\n\n                      case 7:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3);\n              }));\n\n              return function transformSingleParam() {\n                return _ref5.apply(this, arguments);\n              };\n            }();\n            /*\n             * Example:\n             *   swal(\"Hi\", { \n             *     content: <div>Hello!</div> \n             *   })\n             */\n\n\n            transformContentOption = /*#__PURE__*/function () {\n              var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n                var lastParamIndex, lastParam, content, button;\n                return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        lastParamIndex = params.length - 1;\n                        lastParam = params[lastParamIndex];\n\n                        if (!(!lastParam || !lastParam.content)) {\n                          _context4.next = 4;\n                          break;\n                        }\n\n                        return _context4.abrupt(\"return\");\n\n                      case 4:\n                        content = lastParam.content, button = lastParam.button;\n\n                        if (!isTransformable(content)) {\n                          _context4.next = 9;\n                          break;\n                        }\n\n                        _context4.next = 8;\n                        return transformEl(content, transformer, isAsync);\n\n                      case 8:\n                        content = _context4.sent;\n\n                      case 9:\n                        return _context4.abrupt(\"return\", {\n                          content: content //button,\n\n                        });\n\n                      case 10:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4);\n              }));\n\n              return function transformContentOption() {\n                return _ref6.apply(this, arguments);\n              };\n            }();\n            /*\n             * Only transform the params that can \n             * have a DOM node as their value\n             */\n\n\n            _context5.next = 5;\n            return Promise.all([transformSingleParam(), transformContentOption()]);\n\n          case 5:\n            newOpts = _context5.sent;\n            return _context5.abrupt(\"return\", Object.assign.apply(Object, [{}].concat(_toConsumableArray(newOpts))));\n\n          case 7:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function transformParams(_x3, _x4, _x5) {\n    return _ref4.apply(this, arguments);\n  };\n}(); // Transform a single option\n\n\nvar transformEl = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(el, transformer, isAsync) {\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            if (!isAsync) {\n              _context6.next = 6;\n              break;\n            }\n\n            _context6.next = 3;\n            return transformer(el);\n\n          case 3:\n            _context6.t0 = _context6.sent;\n            _context6.next = 7;\n            break;\n\n          case 6:\n            _context6.t0 = transformer(el);\n\n          case 7:\n            return _context6.abrupt(\"return\", _context6.t0);\n\n          case 8:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function transformEl(_x6, _x7, _x8) {\n    return _ref7.apply(this, arguments);\n  };\n}();\n\nexports['default'] = index;\nexports.bindActions = bindActions;","map":{"version":3,"sources":["/Users/vienpham/Desktop/Algorithms_simulation/client/node_modules/@sweetalert/transformer/dist/transformer.js"],"names":["Object","defineProperty","exports","value","_interopDefault","ex","swal","require","index","getOptions","newOptions","bindActions","swalInstance","method","params","identifier","transformer","transformParams","assign","parseTextParams","lastParam","length","isOptionsParam","options","isString","param","text","title","icon","isTransformable","constructor","isAsync","Promise","transformSingleParam","el","transformEl","newContent","content","transformContentOption","lastParamIndex","button","all","newOpts"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar swal = _interopDefault(require('sweetalert'));\n\nvar index = async (...args) => {\n  const newOptions = await getOptions(...args);\n\n  return swal(newOptions);\n};\n\nconst bindActions = (swalInstance) => {\n  for (const method in swal) {\n    swalInstance[method] = swal[method];\n  }\n};\n\nconst getOptions = async (params, {\n  identifier,\n  transformer,\n}) => {\n\n  let newOptions = await transformParams(\n    params, \n    identifier, \n    transformer, \n  );\n\n  newOptions = Object.assign({}, parseTextParams(params), newOptions);\n\n  const lastParam = params[params.length - 1];\n\n  /*\n   * So that we don't lose other specified options\n   * such as buttons... etc.\n   */\n  if (isOptionsParam(lastParam, identifier)) {\n    newOptions = Object.assign({}, lastParam, newOptions);\n  }\n\n  return newOptions;\n};\n\nconst parseTextParams = params => {\n  const options = {};\n\n  const isString = param => typeof param === \"string\";\n\n  if (isString(params[0]) && !isString(params[1])) {\n    options.text = params[0];\n  }\n\n  if (isString(params[1])) {\n    options.title = params[0];\n    options.text = params[1];\n  }\n\n  if (isString(params[2])) {\n    options.icon = params[2];\n  }\n\n  return options;\n};\n\n// Return true if param is a SwalOptions object\nconst isOptionsParam = (param, isTransformable) => (\n  (param.constructor === Object) && \n  (!isTransformable(param))\n);\n\n/*\n * @params: (SwalParams, Function, Function, boolean)\n * @returns: SwalOptions\n */\nconst transformParams = async (params, isTransformable, transformer) => {\n\n  // Check if the transform returns a DOM synchronously\n  // or if it is a promise:\n  const isAsync = transformer() instanceof Promise;\n\n  /*\n   * Example:\n   *   swal(<div>Hello!</div>);\n   */\n  const transformSingleParam = async () => {\n    const el = params[0];\n\n    if (!isTransformable(el)) return;\n\n    const newContent = await transformEl(el, transformer, isAsync);\n\n    return {\n      content: newContent,\n    };\n  };\n\n  /*\n   * Example:\n   *   swal(\"Hi\", { \n   *     content: <div>Hello!</div> \n   *   })\n   */\n  const transformContentOption = async () => {\n    const lastParamIndex = (params.length - 1);\n    const lastParam = params[lastParamIndex];\n\n    if (!lastParam || !lastParam.content) return;\n\n    let { content, button } = lastParam;\n\n    if (isTransformable(content)) {\n      content = await transformEl(content, transformer, isAsync);\n    }\n\n    /* TODO?\n    if (isTransformable(button)) {\n      button = await transformEl(button, transformer, isAsync);\n    }\n    */\n\n    return {\n      content,\n      //button,\n    };\n  };\n\n  /*\n   * Only transform the params that can \n   * have a DOM node as their value\n   */\n  const newOpts = await Promise.all([\n    transformSingleParam(),\n    transformContentOption(),\n  ]);\n\n  return Object.assign({}, ...newOpts);\n};\n\n// Transform a single option\nconst transformEl = async (el, transformer, isAsync) => {\n  return (isAsync) ? await transformer(el) : transformer(el);\n};\n\nexports['default'] = index;\nexports.bindActions = bindActions;\n"]},"metadata":{},"sourceType":"script"}