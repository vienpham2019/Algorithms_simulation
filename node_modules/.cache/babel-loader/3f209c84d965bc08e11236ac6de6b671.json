{"ast":null,"code":"let size, nodes, cols, rows, canvas, c, myReqDraw;\n\nconst grid = props => {\n  size = props.size;\n  nodes = props.nodes;\n  cols = props.cols;\n  rows = props.rows;\n  canvas = props.canvas;\n  c = props.c;\n  cancelAnimationFrame(myReqDraw);\n  draw_prims_maze();\n};\n\nconst stop_grid = () => {\n  cancelAnimationFrame(myReqDraw);\n};\n\nconst draw_prims_maze = () => {\n  myReqDraw = requestAnimationFrame(draw_prims_maze);\n  c.clearRect(0, 0, canvas.width, canvas.height);\n\n  for (let i = 0; i < nodes.length; i++) {\n    nodes[i].draw();\n  }\n\n  for (let i = 0; i < cols; i++) {\n    c.beginPath();\n    c.moveTo(i * size, 0);\n    c.lineTo(i * size, cols * size);\n    c.lineWidth = 4;\n    c.lineCap = \"round\";\n    c.strokeStyle = 'gray';\n    c.stroke();\n  }\n};\n\nexport { grid, stop_grid };","map":{"version":3,"sources":["/Users/vienpham/Desktop/Algorithms_simulation/algorithms/src/Algorithms/draw_maze/grid.js"],"names":["size","nodes","cols","rows","canvas","c","myReqDraw","grid","props","cancelAnimationFrame","draw_prims_maze","stop_grid","requestAnimationFrame","clearRect","width","height","i","length","draw","beginPath","moveTo","lineTo","lineWidth","lineCap","strokeStyle","stroke"],"mappings":"AACA,IAAIA,IAAJ,EAAWC,KAAX,EAAmBC,IAAnB,EAA0BC,IAA1B,EAAiCC,MAAjC,EAA0CC,CAA1C,EAA8CC,SAA9C;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IAAI;AAClBR,EAAAA,IAAI,GAAGQ,KAAK,CAACR,IAAb;AACAC,EAAAA,KAAK,GAAGO,KAAK,CAACP,KAAd;AACAC,EAAAA,IAAI,GAAGM,KAAK,CAACN,IAAb;AACAC,EAAAA,IAAI,GAAGK,KAAK,CAACL,IAAb;AACAC,EAAAA,MAAM,GAAGI,KAAK,CAACJ,MAAf;AACAC,EAAAA,CAAC,GAAGG,KAAK,CAACH,CAAV;AAEAI,EAAAA,oBAAoB,CAACH,SAAD,CAApB;AACAI,EAAAA,eAAe;AAClB,CAVD;;AAYA,MAAMC,SAAS,GAAG,MAAM;AACpBF,EAAAA,oBAAoB,CAACH,SAAD,CAApB;AACH,CAFD;;AAIA,MAAMI,eAAe,GAAG,MAAM;AAC1BJ,EAAAA,SAAS,GAAGM,qBAAqB,CAACF,eAAD,CAAjC;AACAL,EAAAA,CAAC,CAACQ,SAAF,CAAY,CAAZ,EAAc,CAAd,EAAgBT,MAAM,CAACU,KAAvB,EAA8BV,MAAM,CAACW,MAArC;;AAEA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGf,KAAK,CAACgB,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAClCf,IAAAA,KAAK,CAACe,CAAD,CAAL,CAASE,IAAT;AACH;;AAED,OAAI,IAAIF,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGd,IAAnB,EAA0Bc,CAAC,EAA3B,EAA+B;AAC3BX,IAAAA,CAAC,CAACc,SAAF;AACAd,IAAAA,CAAC,CAACe,MAAF,CAASJ,CAAC,GAAGhB,IAAb,EAAmB,CAAnB;AACAK,IAAAA,CAAC,CAACgB,MAAF,CAASL,CAAC,GAAGhB,IAAb,EAAoBE,IAAI,GAAGF,IAA3B;AACAK,IAAAA,CAAC,CAACiB,SAAF,GAAc,CAAd;AACAjB,IAAAA,CAAC,CAACkB,OAAF,GAAY,OAAZ;AACAlB,IAAAA,CAAC,CAACmB,WAAF,GAAgB,MAAhB;AACAnB,IAAAA,CAAC,CAACoB,MAAF;AACH;AACJ,CAjBD;;AAmBA,SAAQlB,IAAR,EAAeI,SAAf","sourcesContent":["\nlet size , nodes , cols , rows , canvas , c , myReqDraw \n\nconst grid = props => {\n    size = props.size\n    nodes = props.nodes \n    cols = props.cols \n    rows = props.rows \n    canvas = props.canvas \n    c = props.c \n    \n    cancelAnimationFrame(myReqDraw)\n    draw_prims_maze()\n}\n\nconst stop_grid = () => {\n    cancelAnimationFrame(myReqDraw)\n}\n\nconst draw_prims_maze = () => {\n    myReqDraw = requestAnimationFrame(draw_prims_maze)\n    c.clearRect(0,0,canvas.width, canvas.height)\n\n    for(let i = 0; i < nodes.length; i ++){\n        nodes[i].draw()\n    }\n\n    for(let i = 0; i < cols ; i ++){\n        c.beginPath()\n        c.moveTo(i * size, 0)\n        c.lineTo(i * size , cols * size)\n        c.lineWidth = 4\n        c.lineCap = \"round\"\n        c.strokeStyle = 'gray'\n        c.stroke()\n    }\n}\n\nexport {grid , stop_grid}\n\n"]},"metadata":{},"sourceType":"module"}