{"ast":null,"code":"var _jsxFileName = \"/Users/vienpham/Desktop/Algorithms_simulation/algorithms/src/App.js\";\nimport React, { Component } from 'react';\nimport { setUp, run_solve_maze } from './Algorithms/mazeController';\nimport { connect } from 'react-redux';\nimport swal from '@sweetalert/with-react';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.check_recursive_delay = value => {\n      this.setState({\n        dispay_draw_button: value\n      });\n    };\n\n    this.updateCanvas = (draw_maze = true) => {\n      // rows == min 15 and max 50\n      let {\n        rows,\n        height,\n        width,\n        select_draw_algorithims\n      } = this.state;\n      let speed = this.props.speed[select_draw_algorithims][this.state.speed];\n\n      if (select_draw_algorithims === \"Recursive Division\") {\n        this.check_recursive_delay(false);\n      }\n\n      let cols = Math.floor(rows * (window.innerWidth * .95 / (window.innerHeight * .9)));\n      const canvas = this.refs.maze;\n      const c = canvas.getContext('2d');\n\n      if (rows < 15 || rows > 50) {\n        swal({\n          button: false,\n          content: /*#__PURE__*/React.createElement(\"div\", {\n            style: {\n              color: 'black'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(\"h3\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 13\n            }\n          }, \"Rows should be minimum 15 and maximum 50.\"))\n        });\n        return;\n      }\n\n      if (draw_maze) {\n        setUp({\n          c,\n          canvas,\n          cols,\n          rows,\n          width,\n          height,\n          draw_maze,\n          select_draw_algorithims,\n          check_recursive_delay: this.check_recursive_delay,\n          speed\n        });\n      } else {\n        let grid_rows = 25;\n        let grid_cols = Math.floor(grid_rows * (window.innerWidth * .95 / (window.innerHeight * .9)));\n        setUp({\n          c,\n          canvas,\n          cols: grid_cols,\n          rows: grid_rows,\n          width,\n          height,\n          draw_maze,\n          select_draw_algorithims: \"\",\n          check_recursive_delay: this.check_recursive_delay,\n          speed\n        });\n      }\n    };\n\n    this.state = {\n      width: window.innerWidth * .95,\n      height: window.innerHeight * .92,\n      select_draw_algorithims: \"Depth first search\",\n      select_solve_algorithims: \"A star\",\n      rows: 15,\n      dispay_draw_button: true,\n      speed: \"Normal\",\n      start_location: {\n        x: 40,\n        y: 170\n      },\n      select_start: false,\n      end_location: {\n        x: 40,\n        y: 170\n      },\n      select_end: false\n    };\n  }\n\n  componentDidUpdate() {\n    this.updateCanvas(false);\n    let canvas = this.refs.maze;\n    let rows = 25;\n    let {\n      width,\n      select_end,\n      select_start\n    } = this.state;\n    let cols = Math.floor(rows * (window.innerWidth * .95 / (window.innerHeight * .9)));\n    let size = Math.floor(width / cols);\n    let {\n      offsetLeft,\n      offsetTop\n    } = canvas;\n    let start_location = {\n      x: offsetLeft + size / 2,\n      y: offsetTop + size / 2\n    };\n    let end_location = {\n      x: offsetLeft + ((cols - 1) * size + size / 2),\n      y: offsetTop + ((rows - 1) * size + size / 2)\n    };\n    this.setState({\n      start_location,\n      end_location\n    });\n    canvas.addEventListener('mousedown', e => {\n      let {\n        pageX,\n        pageY\n      } = e;\n      let x = Math.floor((pageX - offsetLeft) / size) * size + size / 2 + offsetLeft;\n      let y = Math.floor((pageY - offsetTop) / size) * size + size / 2 + offsetTop;\n\n      if (x < cols * size + offsetLeft && y < rows * size + offsetTop) {\n        if (select_end) {\n          end_location = {\n            x,\n            y\n          };\n          this.setState({\n            end_location\n          });\n        }\n\n        if (select_start) {\n          start_location = {\n            x,\n            y\n          };\n          this.setState({\n            start_location\n          });\n        }\n      }\n    });\n  }\n\n  render() {\n    let {\n      width,\n      height,\n      select_solve_algorithims,\n      dispay_draw_button,\n      select_start,\n      display_start,\n      display_end,\n      select_end\n    } = this.state;\n    let {\n      draw_maze_algorithims,\n      solve_maze_algorithims\n    } = this.props;\n    let speed = [\"Slow\", \"Normal\", \"Fast\", \"Supper fast\"];\n    let start_x = this.state.start_location.x;\n    let start_y = this.state.start_location.y;\n    let end_x = this.state.end_location.x;\n    let end_y = this.state.end_location.y;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"nav\", {\n      className: \"navbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group p-2\",\n      style: {\n        minWidth: 600\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"input-group-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, \"Algorithms\")), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"custom-select\",\n      id: \"inputGroupSelect04\",\n      \"aria-label\": \"Example select with button addon\",\n      style: {\n        minWidth: 250\n      },\n      onChange: e => this.setState({\n        select_draw_algorithims: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    }, draw_maze_algorithims.map(algorithm => /*#__PURE__*/React.createElement(\"option\", {\n      value: algorithm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 19\n      }\n    }, algorithm))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"input-group-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }, \"Speed\")), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"custom-select\",\n      id: \"inputGroupSelect04\",\n      \"aria-label\": \"Example select with button addon\",\n      style: {\n        maxWidth: 150\n      },\n      onChange: e => this.setState({\n        speed: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    }, speed.map(s => s === \"Normal\" ? /*#__PURE__*/React.createElement(\"option\", {\n      value: s,\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 23\n      }\n    }, s) : /*#__PURE__*/React.createElement(\"option\", {\n      value: s,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 23\n      }\n    }, s))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"input-group-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }, \"Size(rows)\")), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      className: \"form-control\",\n      min: \"15\",\n      max: \"50\",\n      placeholder: \"Minimum 15 and Maximum 50\",\n      style: {\n        minWidth: 100\n      },\n      onChange: e => {\n        let rows = Math.floor(e.target.value);\n        this.setState({\n          rows\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-append\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, dispay_draw_button ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-light\",\n      type: \"submit\",\n      onClick: () => this.updateCanvas(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }, \"Generate Maze\") : null)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group p-2\",\n      style: {\n        maxWidth: 500\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"input-group-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 15\n      }\n    }, \"Algorithms\")), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"custom-select\",\n      id: \"inputGroupSelect04\",\n      \"aria-label\": \"Example select with button addon\",\n      onChange: e => this.setState({\n        select_solve_algorithims: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    }, solve_maze_algorithims.map(algorithm => /*#__PURE__*/React.createElement(\"option\", {\n      value: algorithm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }\n    }, algorithm))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-append\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-light\",\n      type: \"button\",\n      onClick: () => run_solve_maze(select_solve_algorithims),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 15\n      }\n    }, \"Solve Maze\"))), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-light m-2\",\n      type: \"button\",\n      onClick: () => this.updateCanvas(false),\n      style: {\n        width: 100\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }\n    }, \"Grid\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn m-2\",\n      style: {\n        color: select_start ? 'black' : 'white'\n      },\n      onClick: () => this.setState({\n        select_start: !select_start,\n        select_end: select_start\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-star\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }\n    }), \" Start Point\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn m-2\",\n      style: {\n        color: select_end ? 'black' : 'white'\n      },\n      onClick: () => this.setState({\n        select_end: !select_end,\n        select_start: select_end\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-bullseye\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 13\n      }\n    }), \" End Point\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn m-2\",\n      style: {\n        color: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-square\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 13\n      }\n    }), \" Walls\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"m-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-star\",\n      style: {\n        position: \"absolute\",\n        width: 10,\n        height: 10,\n        top: start_y - 10,\n        left: start_x - 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-bullseye\",\n      style: {\n        position: \"absolute\",\n        width: 6,\n        height: 6,\n        top: end_y - 6,\n        left: end_x - 6\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: \"maze\",\n      style: {\n        width,\n        height\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    draw_maze_algorithims: state.draw_maze_algorithims,\n    solve_maze_algorithims: state.solve_maze_algorithims,\n    speed: state.speed\n  };\n};\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/Users/vienpham/Desktop/Algorithms_simulation/algorithms/src/App.js"],"names":["React","Component","setUp","run_solve_maze","connect","swal","App","constructor","check_recursive_delay","value","setState","dispay_draw_button","updateCanvas","draw_maze","rows","height","width","select_draw_algorithims","state","speed","props","cols","Math","floor","window","innerWidth","innerHeight","canvas","refs","maze","c","getContext","button","content","color","grid_rows","grid_cols","select_solve_algorithims","start_location","x","y","select_start","end_location","select_end","componentDidUpdate","size","offsetLeft","offsetTop","addEventListener","e","pageX","pageY","render","display_start","display_end","draw_maze_algorithims","solve_maze_algorithims","start_x","start_y","end_x","end_y","minWidth","target","map","algorithm","maxWidth","s","position","top","left","mapStateToProps"],"mappings":"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","sourcesContent":["import React , {Component} from 'react'\nimport {setUp , run_solve_maze} from './Algorithms/mazeController'\nimport {connect} from 'react-redux'\nimport swal from '@sweetalert/with-react'\n\n\nclass App extends Component{\n  constructor(){\n    super()\n    this.state = {\n      width: (window.innerWidth * .95),\n      height: (window.innerHeight * .92),\n      select_draw_algorithims: \"Depth first search\", \n      select_solve_algorithims: \"A star\",\n      rows: 15, \n      dispay_draw_button: true , \n      speed: \"Normal\", \n      start_location: {x: 40 , y: 170}, \n      select_start: false,\n\n      end_location: {x: 40 , y: 170}, \n      select_end: false,\n    }\n  }\n\n  componentDidUpdate(){\n    this.updateCanvas(false)\n    let canvas = this.refs.maze\n    let rows = 25\n    let {width, select_end , select_start} = this.state \n    let cols = Math.floor(rows * ((window.innerWidth * .95) / (window.innerHeight * .9))) \n    let size = Math.floor(width / cols)\n    let {offsetLeft , offsetTop} = canvas\n    let start_location = {x: offsetLeft + (size / 2) , y: offsetTop + (size / 2)}\n    let end_location = {x: offsetLeft + ((cols - 1) * size + (size / 2)) , y: offsetTop + ((rows - 1) * size + (size / 2))}\n    this.setState({start_location , end_location})\n    canvas.addEventListener('mousedown' , (e) => {\n      let {pageX , pageY} = e\n      let x = Math.floor(((pageX - offsetLeft) / size)) * (size) + (size / 2) + offsetLeft\n      let y = Math.floor(((pageY - offsetTop) / size)) * (size) + (size / 2) + offsetTop\n      if(x < (cols * size) + offsetLeft && y < (rows * size) + offsetTop){\n        if(select_end){\n          end_location = {x , y}\n          this.setState({end_location})\n        }\n\n        if(select_start){\n          start_location = {x , y}\n          this.setState({start_location})\n        }\n      }\n    })\n  }\n\n  check_recursive_delay = (value) => {\n    this.setState({dispay_draw_button: value})\n  }\n\n  updateCanvas = (draw_maze = true) => {\n    // rows == min 15 and max 50\n    let {rows , height , width , select_draw_algorithims} = this.state\n\n    let speed = this.props.speed[select_draw_algorithims][this.state.speed]\n\n    if(select_draw_algorithims === \"Recursive Division\"){\n      this.check_recursive_delay(false)\n    }\n\n    let cols = Math.floor(rows * ((window.innerWidth * .95) / (window.innerHeight * .9))) \n\n    const canvas = this.refs.maze\n    const c = canvas.getContext('2d');\n\n    if(rows < 15 || rows > 50){\n      swal({\n        button: false, \n        content: (\n          <div style={{color: 'black'}}>\n            <h3>Rows should be minimum 15 and maximum 50.</h3>\n          </div>\n        )\n      })\n      return\n    }\n\n    if(draw_maze){\n      setUp({c , canvas , cols , rows, width , height , draw_maze , select_draw_algorithims , check_recursive_delay: this.check_recursive_delay , speed})\n    }else{\n      let grid_rows = 25\n      let grid_cols = Math.floor(grid_rows * ((window.innerWidth * .95) / (window.innerHeight * .9)))\n      setUp({c , canvas , cols: grid_cols, rows: grid_rows, width , height , draw_maze , select_draw_algorithims: \"\" , check_recursive_delay: this.check_recursive_delay , speed})\n    }\n  }\n  render(){\n    let {width , height , select_solve_algorithims , dispay_draw_button , select_start , display_start , display_end , select_end} = this.state\n    let {draw_maze_algorithims , solve_maze_algorithims} = this.props\n    let speed = [\"Slow\", \"Normal\", \"Fast\" , \"Supper fast\"]\n    let start_x = this.state.start_location.x\n    let start_y = this.state.start_location.y\n\n    let end_x = this.state.end_location.x\n    let end_y = this.state.end_location.y\n    return(\n      <div className=\"mt-1\">\n        <nav className=\"navbar\">\n          <div className=\"d-flex flex-wrap\">\n            <div className=\"input-group p-2\" style={{minWidth: 600}}>\n              <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\">Algorithms</span>\n              </div>\n              <select \n                className=\"custom-select\" \n                id=\"inputGroupSelect04\" \n                aria-label=\"Example select with button addon\"\n                style={{minWidth: 250}}\n                onChange={(e) => this.setState({select_draw_algorithims: e.target.value})}\n              >\n                {draw_maze_algorithims.map(algorithm => \n                  <option value={algorithm}>{algorithm}</option>\n                )}\n              </select>\n              <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\">Speed</span>\n              </div>\n              <select \n                className=\"custom-select\" \n                id=\"inputGroupSelect04\" \n                aria-label=\"Example select with button addon\"\n                style={{maxWidth: 150}}\n                onChange={(e) => this.setState({speed: e.target.value})}\n              >\n                {speed.map(s => \n                  s === \"Normal\"\n                    ? <option value={s} selected>{s}</option>\n                    : <option value={s} >{s}</option>\n                )}\n              </select>\n              <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\">Size(rows)</span>\n              </div>\n              <input \n                type=\"number\" \n                className=\"form-control\" \n                min='15'\n                max='50'\n                placeholder=\"Minimum 15 and Maximum 50\"\n                style={{minWidth: 100}}\n                onChange={(e) => {\n                  let rows = Math.floor(e.target.value)\n                  this.setState({rows})\n                }}\n              ></input>\n            <div className=\"input-group-append\">\n              {dispay_draw_button ? \n                <button \n                  className=\"btn btn-outline-light\" \n                  type=\"submit\"\n                  onClick={() => this.updateCanvas()}\n                >\n                  Generate Maze\n                </button>\n              : null }\n            </div>\n          </div>\n          <div className=\"input-group p-2\" style={{maxWidth: 500}}>\n            <div className=\"input-group-prepend\">\n              <span className=\"input-group-text\">Algorithms</span>\n            </div>\n            <select \n              className=\"custom-select\" \n              id=\"inputGroupSelect04\" \n              aria-label=\"Example select with button addon\"\n              onChange={(e) => this.setState({select_solve_algorithims: e.target.value})}\n            >\n              {solve_maze_algorithims.map(algorithm => \n                <option value={algorithm}>{algorithm}</option>\n              )}\n            </select>\n            <div className=\"input-group-append\">\n              <button \n                className=\"btn btn-outline-light\" \n                type=\"button\"\n                onClick={() => run_solve_maze(select_solve_algorithims)}\n              >\n                Solve Maze\n              </button>\n            </div>\n          </div>\n          <button \n            className=\"btn btn-outline-light m-2\" \n            type=\"button\"\n            onClick={() => this.updateCanvas(false)}\n            style={{width: 100}}\n          >\n            Grid\n          </button>\n          <button \n            className=\"btn m-2\" \n            style={{color: select_start ? 'black' :'white'}}\n            onClick={() => \n              this.setState(\n                {select_start: !select_start, select_end: select_start}\n              )}\n          >\n            <i class=\"fas fa-star\"></i> Start Point\n          </button>\n          <button \n            className=\"btn m-2\" \n            style={{color: select_end ? 'black' :'white'}}\n            onClick={() => \n              this.setState(\n                {select_end: !select_end, select_start: select_end}\n                )}\n          >\n            <i class=\"fas fa-bullseye\"></i> End Point\n          </button>\n          <button className=\"btn m-2\" style={{color: 'white'}}>\n            <i class=\"fas fa-square\"></i> Walls\n          </button>\n          </div>\n        </nav>\n        <div className=\"m-5\">\n          <i class=\"fas fa-star\" style={{position: \"absolute\", width: 10 , height: 10, top: start_y - 10, left: start_x - 10}}></i>\n\n          <i class=\"fas fa-bullseye\" style={{position: \"absolute\", width: 6, height: 6, top: end_y - 6, left: end_x - 6}}></i>\n          <canvas ref=\"maze\" style={{width, height}}></canvas>\n        </div> \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    draw_maze_algorithims: state.draw_maze_algorithims,\n    solve_maze_algorithims: state.solve_maze_algorithims,\n    speed: state.speed \n  }\n}\n\nexport default connect(mapStateToProps)(App)\n"]},"metadata":{},"sourceType":"module"}