{"ast":null,"code":"var _jsxFileName = \"/Users/vienpham/Desktop/Algorithms_simulation/algorithms/src/App.js\";\nimport React, { Component } from 'react';\nimport { setUp, run_depth_first_search } from './Algorithms/depth_first_search_maze';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.updateCanvas = () => {\n      let {\n        cols,\n        rows\n      } = this.state;\n      const canvas = this.refs.maze;\n      const c = canvas.getContext('2d');\n      setUp({\n        c,\n        canvas,\n        cols,\n        rows,\n        draw_maze: true\n      });\n    };\n\n    this.state = {\n      cols: 30,\n      rows: 30\n    };\n  }\n\n  render() {\n    let width = window.innerWidth * 60 / 100;\n    let height = window.innerWidth * 60 / 100;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: \"maze\",\n      style: {\n        width,\n        height\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.updateCanvas(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, \"Generate Array\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        run_depth_first_search();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, \"solve maze\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/vienpham/Desktop/Algorithms_simulation/algorithms/src/App.js"],"names":["React","Component","setUp","run_depth_first_search","App","constructor","updateCanvas","cols","rows","state","canvas","refs","maze","c","getContext","draw_maze","render","width","window","innerWidth","height"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,SAAQC,KAAR,EAAgBC,sBAAhB,QAA6C,sCAA7C;;AAGA,MAAMC,GAAN,SAAkBH,SAAlB,CAA2B;AACzBI,EAAAA,WAAW,GAAE;AACX;;AADW,SAQbC,YARa,GAQE,MAAM;AACnB,UAAI;AAACC,QAAAA,IAAD;AAAQC,QAAAA;AAAR,UAAiB,KAAKC,KAA1B;AACA,YAAMC,MAAM,GAAG,KAAKC,IAAL,CAAUC,IAAzB;AACA,YAAMC,CAAC,GAAGH,MAAM,CAACI,UAAP,CAAkB,IAAlB,CAAV;AAEAZ,MAAAA,KAAK,CAAC;AAACW,QAAAA,CAAD;AAAKH,QAAAA,MAAL;AAAcH,QAAAA,IAAd;AAAqBC,QAAAA,IAArB;AAA4BO,QAAAA,SAAS,EAAE;AAAvC,OAAD,CAAL;AACD,KAdY;;AAEX,SAAKN,KAAL,GAAa;AACXF,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,IAAI,EAAE;AAFK,KAAb;AAID;;AAUDQ,EAAAA,MAAM,GAAE;AACN,QAAIC,KAAK,GAAGC,MAAM,CAACC,UAAP,GAAoB,EAApB,GAAyB,GAArC;AACA,QAAIC,MAAM,GAAGF,MAAM,CAACC,UAAP,GAAoB,EAApB,GAAyB,GAAtC;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,GAAG,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAE;AAACF,QAAAA,KAAD;AAAQG,QAAAA;AAAR,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKd,YAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,eAGE;AAAQ,MAAA,OAAO,EAAE,MAAM;AACrBH,QAAAA,sBAAsB;AACrB,OAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,CADF;AASD;;AA7BwB;;AAgC3B,eAAeC,GAAf","sourcesContent":["import React , {Component} from 'react'\nimport {setUp , run_depth_first_search} from './Algorithms/depth_first_search_maze'\n\n\nclass App extends Component{\n  constructor(){\n    super()\n    this.state = {\n      cols: 30, \n      rows: 30\n    }\n  }\n\n  updateCanvas = () => {\n    let {cols , rows } = this.state\n    const canvas = this.refs.maze\n    const c = canvas.getContext('2d');\n\n    setUp({c , canvas , cols , rows , draw_maze: true })\n  }\n\n  render(){\n    let width = window.innerWidth * 60 / 100\n    let height = window.innerWidth * 60 / 100\n    return(\n      <div className=\"container text-center\">\n        <canvas ref=\"maze\" style={{width, height}}></canvas>\n        <button onClick={() => this.updateCanvas()}>Generate Array</button>\n        <button onClick={() => {\n          run_depth_first_search()\n          }}>solve maze</button>\n      </div>\n    )\n  }\n}\n\nexport default App \n"]},"metadata":{},"sourceType":"module"}