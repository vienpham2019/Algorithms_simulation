{"ast":null,"code":"var _jsxFileName = \"/Users/vienpham/Desktop/Algorithms_simulation/algorithms/src/App.js\";\nimport React, { Component } from 'react';\nimport { setUp, run_depth_first_search } from './Algorithms/depth_first_search_maze';\nimport { connect } from 'react-redux';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.updateCanvas = () => {\n      // rows == min 15 and max 50\n      let rows = this.props.rows;\n      let cols = Math.floor(rows * (window.innerWidth * .95 / (window.innerHeight * .9)));\n      let width = window.innerWidth * .95;\n      let height = window.innerHeight * .92;\n      const canvas = this.refs.maze;\n      const c = canvas.getContext('2d');\n      setUp({\n        c,\n        canvas,\n        cols,\n        rows,\n        width,\n        height,\n        draw_maze: true\n      });\n    };\n\n    this.handelRows = e => {\n      let row = Math.floor(e.target.value);\n\n      if (row < 15 || row > 50) {}\n\n      console.log(e.target.value);\n    };\n\n    this.state = {\n      width: window.innerWidth * .95,\n      height: window.innerHeight * .92,\n      select_draw_algorithim: \"Depth first search\",\n      select_solve_algorithims: \"A star\",\n      rows: 15\n    };\n  }\n\n  render() {\n    let {\n      width,\n      height\n    } = this.state;\n    let {\n      draw_maze_algorithims,\n      solve_maze_algorithims\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"nav\", {\n      className: \"navbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"input-group p-2\",\n      style: {\n        minWidth: 600\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      class: \"custom-select\",\n      id: \"inputGroupSelect04\",\n      \"aria-label\": \"Example select with button addon\",\n      style: {\n        minWidth: 250\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    }, draw_maze_algorithims.map(algorithm => /*#__PURE__*/React.createElement(\"option\", {\n      value: algorithm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }\n    }, algorithm))), /*#__PURE__*/React.createElement(\"select\", {\n      class: \"custom-select\",\n      id: \"inputGroupSelect04\",\n      \"aria-label\": \"Example select with button addon\",\n      style: {\n        minWidth: 100\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"fast\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, \"Fast\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"slow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, \"Slow\")), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      class: \"form-control\",\n      min: \"15\",\n      max: \"50\",\n      placeholder: \"Size (rows)\",\n      style: {\n        minWidth: 100\n      },\n      onChange: e => {\n        let rows = Math.floor(e.target.value);\n\n        if (rows >= 15 && rows <= 50) {\n          this.setState({\n            rows: e.target.value\n          });\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"input-group-append\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      class: \"btn btn-outline-light\",\n      type: \"submit\",\n      onClick: () => this.updateCanvas(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }, \"Generate Maze\"))), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"input-group p-2\",\n      style: {\n        minWidth: 300\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      class: \"custom-select\",\n      id: \"inputGroupSelect04\",\n      \"aria-label\": \"Example select with button addon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    }, solve_maze_algorithims.map(algorithm => /*#__PURE__*/React.createElement(\"option\", {\n      value: algorithm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 19\n      }\n    }, algorithm))), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"input-group-append\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      class: \"btn btn-outline-light\",\n      type: \"button\",\n      onClick: () => run_depth_first_search(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, \"Solve Maze\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"m-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: \"maze\",\n      style: {\n        width,\n        height\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    draw_maze_algorithims: state.draw_maze_algorithims,\n    solve_maze_algorithims: state.solve_maze_algorithims\n  };\n};\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/Users/vienpham/Desktop/Algorithms_simulation/algorithms/src/App.js"],"names":["React","Component","setUp","run_depth_first_search","connect","App","constructor","updateCanvas","rows","props","cols","Math","floor","window","innerWidth","innerHeight","width","height","canvas","refs","maze","c","getContext","draw_maze","handelRows","e","row","target","value","console","log","state","select_draw_algorithim","select_solve_algorithims","render","draw_maze_algorithims","solve_maze_algorithims","minWidth","map","algorithm","setState","mapStateToProps"],"mappings":"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","sourcesContent":["import React , {Component} from 'react'\nimport {setUp , run_depth_first_search} from './Algorithms/depth_first_search_maze'\nimport {connect} from 'react-redux'\n\n\nclass App extends Component{\n  constructor(){\n    super()\n    this.state = {\n      width: (window.innerWidth * .95),\n      height: (window.innerHeight * .92),\n      select_draw_algorithim: \"Depth first search\", \n      select_solve_algorithims: \"A star\",\n      rows: 15\n    }\n  }\n\n  updateCanvas = () => {\n    // rows == min 15 and max 50\n    let rows = this.props.rows \n\n    let cols = Math.floor(rows * ((window.innerWidth * .95) / (window.innerHeight * .9))) \n    let width = (window.innerWidth * .95)\n    let height = (window.innerHeight * .92)\n\n    const canvas = this.refs.maze\n    const c = canvas.getContext('2d');\n\n    setUp({c , canvas , cols , rows, width , height , draw_maze: true })\n  }\n\n  handelRows = e => {\n    let row = Math.floor(e.target.value)\n    if(row < 15 || row > 50){\n\n    }\n    console.log(e.target.value)\n  }\n  render(){\n    let {width , height} = this.state\n    let {draw_maze_algorithims , solve_maze_algorithims} = this.props\n    return(\n      <div className=\"mt-1\">\n        <nav className=\"navbar\">\n          <div className=\"d-flex flex-wrap\">\n            <div class=\"input-group p-2\" style={{minWidth: 600}}>\n              <select \n                class=\"custom-select\" \n                id=\"inputGroupSelect04\" \n                aria-label=\"Example select with button addon\"\n                style={{minWidth: 250}}\n              >\n                {draw_maze_algorithims.map(algorithm => \n                  <option value={algorithm}>{algorithm}</option>\n                )}\n              </select>\n              <select \n                class=\"custom-select\" \n                id=\"inputGroupSelect04\" \n                aria-label=\"Example select with button addon\"\n                style={{minWidth: 100}}\n              >\n                <option value=\"fast\">Fast</option>\n                <option value=\"slow\">Slow</option>\n              </select>\n              <input \n                type=\"number\" \n                class=\"form-control\" \n                min='15'\n                max='50'\n                placeholder=\"Size (rows)\"\n                style={{minWidth: 100}}\n                onChange={(e) => {\n                  let rows = Math.floor(e.target.value)\n                  if(rows >= 15 && rows <= 50){\n                    this.setState({rows: e.target.value})\n                  }\n                }}\n              ></input>\n            <div class=\"input-group-append\">\n              <button \n                class=\"btn btn-outline-light\" \n                type=\"submit\"\n                onClick={() => this.updateCanvas()}\n              >\n                Generate Maze\n              </button>\n            </div>\n          </div>\n            <div class=\"input-group p-2\" style={{minWidth: 300}}>\n              <select \n                class=\"custom-select\" \n                id=\"inputGroupSelect04\" \n                aria-label=\"Example select with button addon\"\n              >\n                {solve_maze_algorithims.map(algorithm => \n                  <option value={algorithm}>{algorithm}</option>\n                )}\n              </select>\n              <div class=\"input-group-append\">\n                <button \n                  class=\"btn btn-outline-light\" \n                  type=\"button\"\n                  onClick={() => run_depth_first_search()}\n                >\n                  Solve Maze\n                </button>\n              </div>\n            </div>\n          </div>\n        </nav>\n        <div className=\"m-5\">\n          <canvas ref=\"maze\" style={{width, height}}></canvas>\n        </div> \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    draw_maze_algorithims: state.draw_maze_algorithims,\n    solve_maze_algorithims: state.solve_maze_algorithims\n  }\n}\n\nexport default connect(mapStateToProps)(App)\n"]},"metadata":{},"sourceType":"module"}